{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.5.2): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport $ from 'jquery';\nimport Util from './util';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel';\nconst VERSION = '4.5.2';\nconst DATA_KEY = 'bs.carousel';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst JQUERY_NO_CONFLICT = $.fn[NAME];\nconst ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\nconst ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\nconst TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\nconst SWIPE_THRESHOLD = 40;\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n};\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n};\nconst DIRECTION_NEXT = 'next';\nconst DIRECTION_PREV = 'prev';\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\nconst EVENT_SLIDE = `slide${EVENT_KEY}`;\nconst EVENT_SLID = `slid${EVENT_KEY}`;\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`;\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`;\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`;\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`;\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`;\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`;\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`;\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`;\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`;\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\nconst CLASS_NAME_CAROUSEL = 'carousel';\nconst CLASS_NAME_ACTIVE = 'active';\nconst CLASS_NAME_SLIDE = 'slide';\nconst CLASS_NAME_RIGHT = 'carousel-item-right';\nconst CLASS_NAME_LEFT = 'carousel-item-left';\nconst CLASS_NAME_NEXT = 'carousel-item-next';\nconst CLASS_NAME_PREV = 'carousel-item-prev';\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SELECTOR_ACTIVE = '.active';\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item';\nconst SELECTOR_ITEM = '.carousel-item';\nconst SELECTOR_ITEM_IMG = '.carousel-item img';\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';\nconst SELECTOR_INDICATORS = '.carousel-indicators';\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]';\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n};\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Carousel {\n  constructor(element, config) {\n    this._items = null;\n    this._interval = null;\n    this._activeElement = null;\n    this._isPaused = false;\n    this._isSliding = false;\n    this.touchTimeout = null;\n    this.touchStartX = 0;\n    this.touchDeltaX = 0;\n    this._config = this._getConfig(config);\n    this._element = element;\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);\n\n    this._addEventListeners();\n  } // Getters\n\n\n  static get VERSION() {\n    return VERSION;\n  }\n\n  static get Default() {\n    return Default;\n  } // Public\n\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT);\n    }\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {\n      this.next();\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV);\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true;\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element);\n      this.cycle(true);\n    }\n\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false;\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\n\n    const activeIndex = this._getItemIndex(this._activeElement);\n\n    if (index > this._items.length - 1 || index < 0) {\n      return;\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index));\n      return;\n    }\n\n    if (activeIndex === index) {\n      this.pause();\n      this.cycle();\n      return;\n    }\n\n    const direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;\n\n    this._slide(direction, this._items[index]);\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY);\n    $.removeData(this._element, DATA_KEY);\n    this._items = null;\n    this._config = null;\n    this._element = null;\n    this._interval = null;\n    this._isPaused = null;\n    this._isSliding = null;\n    this._activeElement = null;\n    this._indicatorsElement = null;\n  } // Private\n\n\n  _getConfig(config) {\n    config = { ...Default,\n      ...config\n    };\n    Util.typeCheckConfig(NAME, config, DefaultType);\n    return config;\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX);\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return;\n    }\n\n    const direction = absDeltax / this.touchDeltaX;\n    this.touchDeltaX = 0; // swipe left\n\n    if (direction > 0) {\n      this.prev();\n    } // swipe right\n\n\n    if (direction < 0) {\n      this.next();\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event));\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element).on(EVENT_MOUSEENTER, event => this.pause(event)).on(EVENT_MOUSELEAVE, event => this.cycle(event));\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners();\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return;\n    }\n\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX;\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX;\n      }\n    };\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX;\n      }\n    };\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX;\n      }\n\n      this._handleSwipe();\n\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n        this.pause();\n\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout);\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n      }\n    };\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, e => e.preventDefault());\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event));\n      $(this._element).on(EVENT_POINTERUP, event => end(event));\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event));\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event));\n      $(this._element).on(EVENT_TOUCHEND, event => end(event));\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return;\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault();\n        this.prev();\n        break;\n\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault();\n        this.next();\n        break;\n\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];\n    return this._items.indexOf(element);\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT;\n    const isPrevDirection = direction === DIRECTION_PREV;\n\n    const activeIndex = this._getItemIndex(activeElement);\n\n    const lastItemIndex = this._items.length - 1;\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement;\n    }\n\n    const delta = direction === DIRECTION_PREV ? -1 : 1;\n    const itemIndex = (activeIndex + delta) % this._items.length;\n    return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget);\n\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));\n\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    });\n    $(this._element).trigger(slideEvent);\n    return slideEvent;\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE));\n      $(indicators).removeClass(CLASS_NAME_ACTIVE);\n\n      const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE);\n      }\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\n\n    const activeElementIndex = this._getItemIndex(activeElement);\n\n    const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n    const nextElementIndex = this._getItemIndex(nextElement);\n\n    const isCycling = Boolean(this._interval);\n    let directionalClassName;\n    let orderClassName;\n    let eventDirectionName;\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT;\n      orderClassName = CLASS_NAME_NEXT;\n      eventDirectionName = DIRECTION_LEFT;\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT;\n      orderClassName = CLASS_NAME_PREV;\n      eventDirectionName = DIRECTION_RIGHT;\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false;\n      return;\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n    if (slideEvent.isDefaultPrevented()) {\n      return;\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return;\n    }\n\n    this._isSliding = true;\n\n    if (isCycling) {\n      this.pause();\n    }\n\n    this._setActiveIndicatorElement(nextElement);\n\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    });\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName);\n      Util.reflow(nextElement);\n      $(activeElement).addClass(directionalClassName);\n      $(nextElement).addClass(directionalClassName);\n      const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);\n\n      if (nextElementInterval) {\n        this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\n        this._config.interval = nextElementInterval;\n      } else {\n        this._config.interval = this._config.defaultInterval || this._config.interval;\n      }\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n      $(activeElement).one(Util.TRANSITION_END, () => {\n        $(nextElement).removeClass(`${directionalClassName} ${orderClassName}`).addClass(CLASS_NAME_ACTIVE);\n        $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`);\n        this._isSliding = false;\n        setTimeout(() => $(this._element).trigger(slidEvent), 0);\n      }).emulateTransitionEnd(transitionDuration);\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE);\n      $(nextElement).addClass(CLASS_NAME_ACTIVE);\n      this._isSliding = false;\n      $(this._element).trigger(slidEvent);\n    }\n\n    if (isCycling) {\n      this.cycle();\n    }\n  } // Static\n\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY);\n      let _config = { ...Default,\n        ...$(this).data()\n      };\n\n      if (typeof config === 'object') {\n        _config = { ..._config,\n          ...config\n        };\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide;\n\n      if (!data) {\n        data = new Carousel(this, _config);\n        $(this).data(DATA_KEY, data);\n      }\n\n      if (typeof config === 'number') {\n        data.to(config);\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`);\n        }\n\n        data[action]();\n      } else if (_config.interval && _config.ride) {\n        data.pause();\n        data.cycle();\n      }\n    });\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this);\n\n    if (!selector) {\n      return;\n    }\n\n    const target = $(selector)[0];\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return;\n    }\n\n    const config = { ...$(target).data(),\n      ...$(this).data()\n    };\n    const slideIndex = this.getAttribute('data-slide-to');\n\n    if (slideIndex) {\n      config.interval = false;\n    }\n\n    Carousel._jQueryInterface.call($(target), config);\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex);\n    }\n\n    event.preventDefault();\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));\n\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i]);\n\n    Carousel._jQueryInterface.call($carousel, $carousel.data());\n  }\n});\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface;\n$.fn[NAME].Constructor = Carousel;\n\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\n  return Carousel._jQueryInterface;\n};\n\nexport default Carousel;","map":{"version":3,"sources":["/home/fellipemarra/Dev/Faculdade/ProjetoWeb/node_modules/bootstrap/js/src/carousel.js"],"names":["$","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","TOUCHEVENT_COMPAT_WAIT","SWIPE_THRESHOLD","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","DIRECTION_NEXT","DIRECTION_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","CLASS_NAME_CAROUSEL","CLASS_NAME_ACTIVE","CLASS_NAME_SLIDE","CLASS_NAME_RIGHT","CLASS_NAME_LEFT","CLASS_NAME_NEXT","CLASS_NAME_PREV","CLASS_NAME_POINTER_EVENT","SELECTOR_ACTIVE","SELECTOR_ACTIVE_ITEM","SELECTOR_ITEM","SELECTOR_ITEM_IMG","SELECTOR_NEXT_PREV","SELECTOR_INDICATORS","SELECTOR_DATA_SLIDE","SELECTOR_DATA_RIDE","PointerType","TOUCH","PEN","Carousel","constructor","element","config","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","next","_slide","nextWhenVisible","hidden","is","css","prev","event","triggerTransitionEnd","cycle","clearInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","length","one","direction","dispose","off","removeData","typeCheckConfig","_handleSwipe","absDeltax","Math","abs","on","_keydown","_addTouchEventListeners","start","originalEvent","pointerType","toUpperCase","clientX","touches","move","end","clearTimeout","setTimeout","querySelectorAll","e","preventDefault","classList","add","test","target","tagName","which","parentNode","slice","call","indexOf","_getItemByDirection","activeElement","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","Event","from","trigger","_setActiveIndicatorElement","indicators","removeClass","nextIndicator","children","addClass","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","hasClass","isDefaultPrevented","slidEvent","reflow","nextElementInterval","parseInt","getAttribute","defaultInterval","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","_jQueryInterface","each","data","action","TypeError","ride","_dataApiClickHandler","selector","getSelectorFromElement","slideIndex","carousels","i","len","$carousel","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.5.2): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                   = 'carousel'\nconst VERSION                = '4.5.2'\nconst DATA_KEY               = 'bs.carousel'\nconst EVENT_KEY              = `.${DATA_KEY}`\nconst DATA_API_KEY           = '.data-api'\nconst JQUERY_NO_CONFLICT     = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE     = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE    = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD        = 40\n\nconst Default = {\n  interval : 5000,\n  keyboard : true,\n  slide    : false,\n  pause    : 'hover',\n  wrap     : true,\n  touch    : true\n}\n\nconst DefaultType = {\n  interval : '(number|boolean)',\n  keyboard : 'boolean',\n  slide    : '(boolean|string)',\n  pause    : '(string|boolean)',\n  wrap     : 'boolean',\n  touch    : 'boolean'\n}\n\nconst DIRECTION_NEXT     = 'next'\nconst DIRECTION_PREV     = 'prev'\nconst DIRECTION_LEFT     = 'left'\nconst DIRECTION_RIGHT    = 'right'\n\nconst EVENT_SLIDE          = `slide${EVENT_KEY}`\nconst EVENT_SLID           = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN        = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER     = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE     = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART     = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE      = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND       = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN    = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP      = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START     = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API  = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL      = 'carousel'\nconst CLASS_NAME_ACTIVE        = 'active'\nconst CLASS_NAME_SLIDE         = 'slide'\nconst CLASS_NAME_RIGHT         = 'carousel-item-right'\nconst CLASS_NAME_LEFT          = 'carousel-item-left'\nconst CLASS_NAME_NEXT          = 'carousel-item-next'\nconst CLASS_NAME_PREV          = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE      = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM        = '.carousel-item'\nconst SELECTOR_ITEM_IMG    = '.carousel-item img'\nconst SELECTOR_NEXT_PREV   = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS  = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE  = '[data-slide], [data-slide-to]'\nconst SELECTOR_DATA_RIDE   = '[data-ride=\"carousel\"]'\n\nconst PointerType = {\n  TOUCH : 'touch',\n  PEN   : 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items         = null\n    this._interval      = null\n    this._activeElement = null\n    this._isPaused      = false\n    this._isSliding     = false\n    this.touchTimeout   = null\n    this.touchStartX    = 0\n    this.touchDeltaX    = 0\n\n    this._config            = this._getConfig(config)\n    this._element           = element\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS)\n    this._touchSupported    = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent      = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex\n      ? DIRECTION_NEXT\n      : DIRECTION_PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items             = null\n    this._config            = null\n    this._element           = null\n    this._interval          = null\n    this._isPaused          = null\n    this._isSliding         = null\n    this._activeElement     = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, (event) => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(EVENT_MOUSEENTER, (event) => this.pause(event))\n        .on(EVENT_MOUSELEAVE, (event) => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = (event) => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = (event) => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n        this.touchTimeout = setTimeout((event) => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG))\n      .on(EVENT_DRAG_START, (e) => e.preventDefault())\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, (event) => start(event))\n      $(this._element).on(EVENT_POINTERUP, (event) => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, (event) => start(event))\n      $(this._element).on(EVENT_TOUCHMOVE, (event) => move(event))\n      $(this._element).on(EVENT_TOUCHEND, (event) => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode\n      ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM))\n      : []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT\n    const isPrevDirection = direction === DIRECTION_PREV\n    const activeIndex     = this._getItemIndex(activeElement)\n    const lastItemIndex   = this._items.length - 1\n    const isGoingToWrap   = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta     = direction === DIRECTION_PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1\n      ? this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM))\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE))\n      $(indicators).removeClass(CLASS_NAME_ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement   = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT\n      orderClassName = CLASS_NAME_NEXT\n      eventDirectionName = DIRECTION_LEFT\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT\n      orderClassName = CLASS_NAME_PREV\n      eventDirectionName = DIRECTION_RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10)\n      if (nextElementInterval) {\n        this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n        this._config.interval = nextElementInterval\n      } else {\n        this._config.interval = this._config.defaultInterval || this._config.interval\n      }\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(CLASS_NAME_ACTIVE)\n\n          $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n      $(nextElement).addClass(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n"]},"metadata":{},"sourceType":"module"}